                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_uart_irq_main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _MibReadDebugByte
                                     13 	.globl _MibWriteDebugString
                                     14 	.globl _MibWriteDebugByte
                                     15 	.globl _MibDebugInit
                                     16 	.globl _GPIO_WriteReverse
                                     17 	.globl _GPIO_Init
                                     18 	.globl _GPIO_DeInit
                                     19 	.globl _CLK_HSIPrescalerConfig
                                     20 	.globl _CLK_Configuration
                                     21 	.globl _GPIO_Configuration
                                     22 	.globl _Toggle
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DATA
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area INITIALIZED
                                     31 ;--------------------------------------------------------
                                     32 ; Stack segment in internal ram
                                     33 ;--------------------------------------------------------
                                     34 	.area SSEG
      000000                         35 __start__stack:
      000000                         36 	.ds	1
                                     37 
                                     38 ;--------------------------------------------------------
                                     39 ; absolute external ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DABS (ABS)
                                     42 
                                     43 ; default segment ordering for linker
                                     44 	.area HOME
                                     45 	.area GSINIT
                                     46 	.area GSFINAL
                                     47 	.area CONST
                                     48 	.area INITIALIZER
                                     49 	.area CODE
                                     50 
                                     51 ;--------------------------------------------------------
                                     52 ; interrupt vector
                                     53 ;--------------------------------------------------------
                                     54 	.area HOME
      000000                         55 __interrupt_vect:
      000000 82v00u00u00             56 	int s_GSINIT ; reset
      000004 82v00u00u00             57 	int _TRAP_IRQHandler ; trap
      000008 82v00u00u00             58 	int _TLI_IRQHandler ; int0
      00000C 82v00u00u00             59 	int _AWU_IRQHandler ; int1
      000010 82v00u00u00             60 	int _CLK_IRQHandler ; int2
      000014 82v00u00u00             61 	int _EXTI_PORTA_IRQHandler ; int3
      000018 82v00u00u00             62 	int _EXTI_PORTB_IRQHandler ; int4
      00001C 82v00u00u00             63 	int _EXTI_PORTC_IRQHandler ; int5
      000020 82v00u00u00             64 	int _EXTI_PORTD_IRQHandler ; int6
      000024 82v00u00u00             65 	int _EXTI_PORTE_IRQHandler ; int7
      000028 82 00 00 00             66 	int 0x000000 ; int8
      00002C 82 00 00 00             67 	int 0x000000 ; int9
      000030 82v00u00u00             68 	int _SPI_IRQHandler ; int10
      000034 82v00u00u00             69 	int _TIM1_UPD_OVF_TRG_BRK_IRQHandler ; int11
      000038 82v00u00u00             70 	int _TIM1_CAP_COM_IRQHandler ; int12
      00003C 82v00u00u00             71 	int _TIM2_UPD_OVF_BRK_IRQHandler ; int13
      000040 82v00u00u00             72 	int _TIM2_CAP_COM_IRQHandler ; int14
      000044 82v00u00u00             73 	int _TIM3_UPD_OVF_BRK_IRQHandler ; int15
      000048 82v00u00u00             74 	int _TIM3_CAP_COM_IRQHandler ; int16
      00004C 82 00 00 00             75 	int 0x000000 ; int17
      000050 82 00 00 00             76 	int 0x000000 ; int18
      000054 82v00u00u00             77 	int _I2C_IRQHandler ; int19
      000058 82v00u00u00             78 	int _UART2_TX_IRQHandler ; int20
      00005C 82v00u00u00             79 	int _UART2_RX_IRQHandler ; int21
      000060 82v00u00u00             80 	int _ADC1_IRQHandler ; int22
      000064 82v00u00u00             81 	int _TIM4_UPD_OVF_IRQHandler ; int23
      000068 82v00u00u00             82 	int _EEPROM_EEC_IRQHandler ; int24
                                     83 ;--------------------------------------------------------
                                     84 ; global & static initialisations
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME
                                     87 	.area GSINIT
                                     88 	.area GSFINAL
                                     89 	.area GSINIT
      000000 CDr00r00         [ 4]   90 	call	___sdcc_external_startup
      000003 4D               [ 1]   91 	tnz	a
      000004 27 03            [ 1]   92 	jreq	__sdcc_init_data
      000006 CCr00r6C         [ 2]   93 	jp	__sdcc_program_startup
      000009                         94 __sdcc_init_data:
                                     95 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]   96 	ldw x, #l_DATA
      00000C 27 07            [ 1]   97 	jreq	00002$
      00000E                         98 00001$:
      00000E 72 4FuFFuFF      [ 1]   99 	clr (s_DATA - 1, x)
      000012 5A               [ 2]  100 	decw x
      000013 26 F9            [ 1]  101 	jrne	00001$
      000015                        102 00002$:
      000015 AEr00r00         [ 2]  103 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]  104 	jreq	00004$
      00001A                        105 00003$:
      00001A D6uFFuFF         [ 1]  106 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]  107 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]  108 	decw	x
      000021 26 F7            [ 1]  109 	jrne	00003$
      000023                        110 00004$:
                                    111 ; stm8_genXINIT() end
                                    112 	.area GSFINAL
      000000 CCr00r6C         [ 2]  113 	jp	__sdcc_program_startup
                                    114 ;--------------------------------------------------------
                                    115 ; Home
                                    116 ;--------------------------------------------------------
                                    117 	.area HOME
                                    118 	.area HOME
      00006C                        119 __sdcc_program_startup:
      00006C CCr00r00         [ 2]  120 	jp	_main
                                    121 ;	return from main will return to caller
                                    122 ;--------------------------------------------------------
                                    123 ; code
                                    124 ;--------------------------------------------------------
                                    125 	.area CODE
                                    126 ;	stm8s_uart_irq_main.c: 46: void main(void)
                                    127 ;	-----------------------------------------
                                    128 ;	 function main
                                    129 ;	-----------------------------------------
      000000                        130 _main:
      000000 52 04            [ 2]  131 	sub	sp, #4
                                    132 ;	stm8s_uart_irq_main.c: 50: CLK_Configuration();
      000002 CDr00r77         [ 4]  133 	call	_CLK_Configuration
                                    134 ;	stm8s_uart_irq_main.c: 53: GPIO_Configuration();
      000005 CDr00r7B         [ 4]  135 	call	_GPIO_Configuration
                                    136 ;	stm8s_uart_irq_main.c: 56: MibDebugInit(9600);
      000008 4B 80            [ 1]  137 	push	#0x80
      00000A 4B 25            [ 1]  138 	push	#0x25
      00000C 5F               [ 1]  139 	clrw	x
      00000D 89               [ 2]  140 	pushw	x
      00000E CDr00r00         [ 4]  141 	call	_MibDebugInit
                                    142 ;	stm8s_uart_irq_main.c: 59: enableInterrupts();
      000011 9A               [ 1]  143 	rim
                                    144 ;	stm8s_uart_irq_main.c: 62: MibWriteDebugStringCheck(1,"\r\n ###################################\r\n");
      000012 AEr00r00         [ 2]  145 	ldw	x, #(__str_0+0)
      000015 CDr00r00         [ 4]  146 	call	_MibWriteDebugString
                                    147 ;	stm8s_uart_irq_main.c: 63: MibWriteDebugStringCheck(1," file name : " __FILE__ "\r\n");
      000018 AEr00r29         [ 2]  148 	ldw	x, #(__str_1+0)
      00001B CDr00r00         [ 4]  149 	call	_MibWriteDebugString
                                    150 ;	stm8s_uart_irq_main.c: 64: MibWriteDebugStringCheck(1," date :  "__DATE__"  :  "__TIME__"\r\n");
      00001E AEr00r4E         [ 2]  151 	ldw	x, #(__str_2+0)
      000021 CDr00r00         [ 4]  152 	call	_MibWriteDebugString
                                    153 ;	stm8s_uart_irq_main.c: 65: MibWriteDebugStringCheck(1," webgpio.com by MYMEDIA Co., Ltd.\r\n");
      000024 AEr00r72         [ 2]  154 	ldw	x, #(__str_3+0)
      000027 CDr00r00         [ 4]  155 	call	_MibWriteDebugString
                                    156 ;	stm8s_uart_irq_main.c: 66: MibWriteDebugStringCheck(1," ###################################\r\n");
      00002A AEr00r96         [ 2]  157 	ldw	x, #(__str_4+0)
      00002D CDr00r00         [ 4]  158 	call	_MibWriteDebugString
                                    159 ;	stm8s_uart_irq_main.c: 70: uint32_t vdwDelay = 0;
      000030 5F               [ 1]  160 	clrw	x
      000031 1F 03            [ 2]  161 	ldw	(0x03, sp), x
      000033 1F 01            [ 2]  162 	ldw	(0x01, sp), x
                                    163 ;	stm8s_uart_irq_main.c: 71: do {
      000035                        164 00109$:
                                    165 ;	stm8s_uart_irq_main.c: 72: if((UCOM_KEY1_GPIO->IDR & UCOM_KEY1_PIN)==0)
      000035 72 0A 50 06 06   [ 2]  166 	btjt	0x5006, #5, 00105$
                                    167 ;	stm8s_uart_irq_main.c: 75: UCOM_LED1_GPIO->ODR = UCOM_LED1_GPIO->ODR | UCOM_LED1_PIN; // LED off
      00003A 72 10 50 0F      [ 1]  168 	bset	0x500f, #0
      00003E 20 25            [ 2]  169 	jra	00106$
      000040                        170 00105$:
                                    171 ;	stm8s_uart_irq_main.c: 79: if(vdwDelay)
      000040 1E 03            [ 2]  172 	ldw	x, (0x03, sp)
      000042 26 04            [ 1]  173 	jrne	00143$
      000044 1E 01            [ 2]  174 	ldw	x, (0x01, sp)
      000046 27 10            [ 1]  175 	jreq	00102$
      000048                        176 00143$:
                                    177 ;	stm8s_uart_irq_main.c: 81: vdwDelay--;
      000048 1E 03            [ 2]  178 	ldw	x, (0x03, sp)
      00004A 1D 00 01         [ 2]  179 	subw	x, #0x0001
      00004D 1F 03            [ 2]  180 	ldw	(0x03, sp), x
      00004F 1E 01            [ 2]  181 	ldw	x, (0x01, sp)
      000051 24 01            [ 1]  182 	jrnc	00144$
      000053 5A               [ 2]  183 	decw	x
      000054                        184 00144$:
      000054 1F 01            [ 2]  185 	ldw	(0x01, sp), x
      000056 20 0D            [ 2]  186 	jra	00106$
      000058                        187 00102$:
                                    188 ;	stm8s_uart_irq_main.c: 85: vdwDelay = 320000;
      000058 AE E2 00         [ 2]  189 	ldw	x, #0xe200
      00005B 1F 03            [ 2]  190 	ldw	(0x03, sp), x
      00005D AE 00 04         [ 2]  191 	ldw	x, #0x0004
      000060 1F 01            [ 2]  192 	ldw	(0x01, sp), x
                                    193 ;	stm8s_uart_irq_main.c: 86: Toggle();
      000062 CDr00r9C         [ 4]  194 	call	_Toggle
      000065                        195 00106$:
                                    196 ;	stm8s_uart_irq_main.c: 89: vwCh = MibReadDebugByte();
      000065 CDr00r00         [ 4]  197 	call	_MibReadDebugByte
                                    198 ;	stm8s_uart_irq_main.c: 90: if(vwCh!=MIB_DEBUG_READ_NODATA)
      000068 90 93            [ 1]  199 	ldw	y, x
      00006A 90 5C            [ 1]  200 	incw	y
      00006C 27 C7            [ 1]  201 	jreq	00109$
                                    202 ;	stm8s_uart_irq_main.c: 92: MibWriteDebugByte(vwCh);
      00006E 9F               [ 1]  203 	ld	a, xl
      00006F CDr00r00         [ 4]  204 	call	_MibWriteDebugByte
                                    205 ;	stm8s_uart_irq_main.c: 94: } while(1);
      000072 20 C1            [ 2]  206 	jra	00109$
                                    207 ;	stm8s_uart_irq_main.c: 96: }
      000074 5B 04            [ 2]  208 	addw	sp, #4
      000076 81               [ 4]  209 	ret
                                    210 ;	stm8s_uart_irq_main.c: 108: void CLK_Configuration(void)
                                    211 ;	-----------------------------------------
                                    212 ;	 function CLK_Configuration
                                    213 ;	-----------------------------------------
      000077                        214 _CLK_Configuration:
                                    215 ;	stm8s_uart_irq_main.c: 112: CLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);
      000077 4F               [ 1]  216 	clr	a
                                    217 ;	stm8s_uart_irq_main.c: 114: }
      000078 CCr00r00         [ 2]  218 	jp	_CLK_HSIPrescalerConfig
                                    219 ;	stm8s_uart_irq_main.c: 126: void GPIO_Configuration(void)
                                    220 ;	-----------------------------------------
                                    221 ;	 function GPIO_Configuration
                                    222 ;	-----------------------------------------
      00007B                        223 _GPIO_Configuration:
                                    224 ;	stm8s_uart_irq_main.c: 129: GPIO_DeInit(UCOM_LED1_GPIO);
      00007B AE 50 0F         [ 2]  225 	ldw	x, #0x500f
      00007E CDr00r00         [ 4]  226 	call	_GPIO_DeInit
                                    227 ;	stm8s_uart_irq_main.c: 131: GPIO_Init(UCOM_LED1_GPIO, UCOM_LED1_PIN, UCOM_LED1_MODE);
      000081 4B E0            [ 1]  228 	push	#0xe0
      000083 A6 01            [ 1]  229 	ld	a, #0x01
      000085 AE 50 0F         [ 2]  230 	ldw	x, #0x500f
      000088 CDr00r00         [ 4]  231 	call	_GPIO_Init
                                    232 ;	stm8s_uart_irq_main.c: 133: GPIO_DeInit(UCOM_KEY1_GPIO);
      00008B AE 50 05         [ 2]  233 	ldw	x, #0x5005
      00008E CDr00r00         [ 4]  234 	call	_GPIO_DeInit
                                    235 ;	stm8s_uart_irq_main.c: 135: GPIO_Init(UCOM_KEY1_GPIO, UCOM_KEY1_PIN, UCOM_KEY1_MODE);
      000091 4B 40            [ 1]  236 	push	#0x40
      000093 A6 20            [ 1]  237 	ld	a, #0x20
      000095 AE 50 05         [ 2]  238 	ldw	x, #0x5005
      000098 CDr00r00         [ 4]  239 	call	_GPIO_Init
                                    240 ;	stm8s_uart_irq_main.c: 136: }
      00009B 81               [ 4]  241 	ret
                                    242 ;	stm8s_uart_irq_main.c: 148: void Toggle(void)
                                    243 ;	-----------------------------------------
                                    244 ;	 function Toggle
                                    245 ;	-----------------------------------------
      00009C                        246 _Toggle:
                                    247 ;	stm8s_uart_irq_main.c: 150: GPIO_WriteReverse(UCOM_LED1_GPIO, UCOM_LED1_PIN);
      00009C A6 01            [ 1]  248 	ld	a, #0x01
      00009E AE 50 0F         [ 2]  249 	ldw	x, #0x500f
                                    250 ;	stm8s_uart_irq_main.c: 151: }
      0000A1 CCr00r00         [ 2]  251 	jp	_GPIO_WriteReverse
                                    252 	.area CODE
                                    253 	.area CONST
                                    254 	.area CONST
      000000                        255 __str_0:
      000000 0D                     256 	.db 0x0d
      000001 0A                     257 	.db 0x0a
      000002 20 23 23 23 23 23 23   258 	.ascii " ###################################"
             23 23 23 23 23 23 23
             23 23 23 23 23 23 23
             23 23 23 23 23 23 23
             23 23 23 23 23 23 23
             23
      000026 0D                     259 	.db 0x0d
      000027 0A                     260 	.db 0x0a
      000028 00                     261 	.db 0x00
                                    262 	.area CODE
                                    263 	.area CONST
      000029                        264 __str_1:
      000029 20 66 69 6C 65 20 6E   265 	.ascii " file name : stm8s_uart_irq_main.c"
             61 6D 65 20 3A 20 73
             74 6D 38 73 5F 75 61
             72 74 5F 69 72 71 5F
             6D 61 69 6E 2E 63
      00004B 0D                     266 	.db 0x0d
      00004C 0A                     267 	.db 0x0a
      00004D 00                     268 	.db 0x00
                                    269 	.area CODE
                                    270 	.area CONST
      00004E                        271 __str_2:
      00004E 20 64 61 74 65 20 3A   272 	.ascii " date :  Dec  4 2024  :  12:23:03"
             20 20 44 65 63 20 20
             34 20 32 30 32 34 20
             20 3A 20 20 31 32 3A
             32 33 3A 30 33
      00006F 0D                     273 	.db 0x0d
      000070 0A                     274 	.db 0x0a
      000071 00                     275 	.db 0x00
                                    276 	.area CODE
                                    277 	.area CONST
      000072                        278 __str_3:
      000072 20 77 65 62 67 70 69   279 	.ascii " webgpio.com by MYMEDIA Co., Ltd."
             6F 2E 63 6F 6D 20 62
             79 20 4D 59 4D 45 44
             49 41 20 43 6F 2E 2C
             20 4C 74 64 2E
      000093 0D                     280 	.db 0x0d
      000094 0A                     281 	.db 0x0a
      000095 00                     282 	.db 0x00
                                    283 	.area CODE
                                    284 	.area CONST
      000096                        285 __str_4:
      000096 20 23 23 23 23 23 23   286 	.ascii " ###################################"
             23 23 23 23 23 23 23
             23 23 23 23 23 23 23
             23 23 23 23 23 23 23
             23 23 23 23 23 23 23
             23
      0000BA 0D                     287 	.db 0x0d
      0000BB 0A                     288 	.db 0x0a
      0000BC 00                     289 	.db 0x00
                                    290 	.area CODE
                                    291 	.area INITIALIZER
                                    292 	.area CABS (ABS)
